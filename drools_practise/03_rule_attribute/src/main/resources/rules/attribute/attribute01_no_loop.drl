package rules.attribute;
import com.rules.attribute.pojo.Person;

/*
总结：当一个规则文件中，一个Fact对象通过Drools函数北修改，规则体将再次被激活
再次激活的前提条件:被修改的Fact对象与规则的LHS部分的约束条件是包含关系。一个规则事实对象的变更会影响其他规则的结果。

*/
rule "no_loop_00"
    when
        $person:Person(age == 30);
    then
        System.out.println("【no_loop_00】其他规则的影响");
end

rule "no_loop_001"
    when
        $person:Person(name == "张三");
    then
        System.out.println("【no_loop_001】其他规则的影响");
end

//01规则进入死循环，同时00规则也进入死循环,age属性变更只会影响到age属性相关when条件的判断
//rule "no_loop_01"
//    when
//        $person:Person(age == 30);
//    then
//        $person.setAge(30);
//        update($person)
//        System.out.println("【no_loop_01】默认no-loop为false,进入死循环");
//end

//no-loop设置为true  fact对象的age属性变更，自身规则不会再次进入判断，其他相关age属性的判断规则会再次进入判断
//no_loop_02不会再次执行，no_loop_00再次执行，no_loop_001不会再次执行
rule "no_loop_02"
    no-loop true
    when
        $person:Person(age == 30);
    then
        $person.setAge(30);
        update($person)
        System.out.println("【no_loop_02】默认no-loop为true,不会影响到fact对象，再次进入规则执行");
end
